"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: () => (/* binding */ apiClient),\n/* harmony export */   getAuthToken: () => (/* binding */ getAuthToken),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   removeAuthToken: () => (/* binding */ removeAuthToken),\n/* harmony export */   setAuthToken: () => (/* binding */ setAuthToken),\n/* harmony export */   useApi: () => (/* binding */ useApi)\n/* harmony export */ });\n// API Service Layer for Readdy Frontend\n// Communicates with Laravel backend at http://localhost:8001/api/v1\nconst API_BASE_URL = \"http://localhost:8001/api/v1\" || 0;\n// API Client\nclass ApiClient {\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                ...options.headers\n            },\n            ...options\n        };\n        // Add auth token if available\n        if (true) {\n            const token = localStorage.getItem('auth_token');\n            if (token) {\n                config.headers = {\n                    ...config.headers,\n                    'Authorization': \"Bearer \".concat(token)\n                };\n            }\n        }\n        try {\n            const response = await fetch(url, config);\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message || 'API request failed');\n            }\n            return data;\n        } catch (error) {\n            console.error('API request error:', error);\n            throw error;\n        }\n    }\n    // Authentication\n    async register(userData) {\n        const response = await this.request('/auth/register', {\n            method: 'POST',\n            body: JSON.stringify(userData)\n        });\n        return response.data;\n    }\n    async login(credentials) {\n        const response = await this.request('/auth/login', {\n            method: 'POST',\n            body: JSON.stringify(credentials)\n        });\n        return response.data;\n    }\n    async logout() {\n        await this.request('/auth/logout', {\n            method: 'POST'\n        });\n    }\n    async getCurrentUser() {\n        const response = await this.request('/auth/user');\n        return response.data.user;\n    }\n    // Books\n    async getBooks() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const params = new URLSearchParams();\n        Object.entries(filters).forEach((param)=>{\n            let [key, value] = param;\n            if (value !== undefined && value !== null) {\n                params.append(key, value.toString());\n            }\n        });\n        const response = await this.request(\"/books?\".concat(params));\n        return response.data;\n    }\n    async getBook(id) {\n        const response = await this.request(\"/books/\".concat(id));\n        return response.data;\n    }\n    async getFeaturedBooks() {\n        const response = await this.request('/books/featured');\n        return response.data;\n    }\n    async getBestsellers() {\n        const response = await this.request('/books/bestsellers');\n        return response.data;\n    }\n    async getNewReleases() {\n        const response = await this.request('/books/new-releases');\n        return response.data;\n    }\n    // Orders\n    async getOrders() {\n        return this.request('/orders');\n    }\n    async getOrder(orderId) {\n        return this.request(\"/orders/\".concat(orderId));\n    }\n    async cancelOrder(orderId, reason) {\n        return this.request(\"/orders/\".concat(orderId, \"/cancel\"), {\n            method: 'POST',\n            body: JSON.stringify({\n                reason\n            })\n        });\n    }\n    async getOrderReceipt(orderId) {\n        return this.request(\"/orders/\".concat(orderId, \"/receipt\"));\n    }\n    async downloadOrderReceipt(orderId) {\n        return this.request(\"/orders/\".concat(orderId, \"/receipt/download\"));\n    }\n    // Order Notifications\n    async getOrderNotifications() {\n        return this.request('/orders/notifications');\n    }\n    async markOrderNotificationAsRead(notificationId) {\n        return this.request(\"/orders/notifications/\".concat(notificationId, \"/read\"), {\n            method: 'POST'\n        });\n    }\n    async getUnreadOrderNotificationsCount() {\n        return this.request(\"/orders/notifications/unread-count\");\n    }\n    constructor(baseURL){\n        this.baseURL = baseURL;\n    }\n}\n// Create and export API client instance\nconst apiClient = new ApiClient(API_BASE_URL);\n// Utility functions\nconst isAuthenticated = ()=>{\n    if (false) {}\n    return !!localStorage.getItem('auth_token');\n};\nconst getAuthToken = ()=>{\n    if (false) {}\n    return localStorage.getItem('auth_token');\n};\nconst setAuthToken = (token)=>{\n    if (false) {}\n    localStorage.setItem('auth_token', token);\n};\nconst removeAuthToken = ()=>{\n    if (false) {}\n    localStorage.removeItem('auth_token');\n};\n// React hooks for API calls\nconst useApi = ()=>{\n    return {\n        register: apiClient.register.bind(apiClient),\n        login: apiClient.login.bind(apiClient),\n        logout: apiClient.logout.bind(apiClient),\n        getCurrentUser: apiClient.getCurrentUser.bind(apiClient),\n        getBooks: apiClient.getBooks.bind(apiClient),\n        getBook: apiClient.getBook.bind(apiClient),\n        getFeaturedBooks: apiClient.getFeaturedBooks.bind(apiClient),\n        getBestsellers: apiClient.getBestsellers.bind(apiClient),\n        getNewReleases: apiClient.getNewReleases.bind(apiClient),\n        getOrders: apiClient.getOrders.bind(apiClient),\n        getOrder: apiClient.getOrder.bind(apiClient),\n        cancelOrder: apiClient.cancelOrder.bind(apiClient),\n        getOrderReceipt: apiClient.getOrderReceipt.bind(apiClient),\n        downloadOrderReceipt: apiClient.downloadOrderReceipt.bind(apiClient),\n        getOrderNotifications: apiClient.getOrderNotifications.bind(apiClient),\n        markOrderNotificationAsRead: apiClient.markOrderNotificationAsRead.bind(apiClient),\n        getUnreadOrderNotificationsCount: apiClient.getUnreadOrderNotificationsCount.bind(apiClient)\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});